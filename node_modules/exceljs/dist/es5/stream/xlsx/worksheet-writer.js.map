{"version":3,"sources":["../../../../lib/stream/xlsx/worksheet-writer.js"],"names":["_","require","RelType","colCache","Dimensions","StringBuf","Row","Column","SheetRelsWriter","SheetCommentsWriter","DataValidations","xmlBuffer","ListXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","ColXform","RowXform","HyperlinkXform","SheetViewXform","SheetProtectionXform","PageMarginsXform","PageSetupXform","AutoFilterXform","PictureXform","xform","dataValidations","sheetProperties","sheetFormatProperties","columns","tag","length","childXform","row","hyperlinks","sheetViews","sheetProtection","pageMargins","pageSeteup","autoFilter","picture","WorksheetWriter","options","id","name","state","_rows","_columns","_keys","_merges","add","_sheetRelsWriter","_sheetCommentsWriter","_dimensions","_rowZero","committed","_formulae","_siFormulae","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","rowBreaks","colBreaks","useSharedStrings","_workbook","workbook","hasComments","_views","views","_media","_writeOpenWorksheet","startedData","Error","forEach","cRow","_writeRow","_writeOpenSheetData","_writeCloseSheetData","_writeAutoFilter","_writeMergeCells","_writeHyperlinks","_writeDataValidations","_writeSheetProtection","_writePageMargins","_writePageSetup","_writeBackground","_writeLegacyData","_writeCloseWorksheet","stream","end","commit","key","value","f","each","c","col","l2n","n","push","iteratee","includeEmpty","_nextRow","i","getRow","hasValues","number","found","shift","rowNumber","index","values","r","address","getAddress","findRow","findCell","column","getCellEx","dimensions","Array","prototype","slice","call","arguments","merge","intersects","master","getCell","j","imageId","_background","text","reset","addText","write","xmlBuf","sheetPropertiesModel","outlineProperties","tabColor","toXml","sheetFormatPropertiesModel","_writeSheetProperties","_writeSheetFormatProperties","cols","toModel","prepare","styles","_write","_writeColumns","height","model","sharedStrings","hyperlinksProxy","merges","formulae","siFormulae","comments","addComments","_hyperlinks","image","getImage","pictureId","addMedia","Target","Type","Image","rId","vmlRelId","_stream","_openStream","pause","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","max","count","defn","module","exports"],"mappings":"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","sourcesContent":["const _ = require('../../utils/under-dash');\n\nconst RelType = require('../../xlsx/rel-type');\n\nconst colCache = require('../../utils/col-cache');\nconst Dimensions = require('../../doc/range');\nconst StringBuf = require('../../utils/string-buf');\n\nconst Row = require('../../doc/row');\nconst Column = require('../../doc/column');\n\nconst SheetRelsWriter = require('./sheet-rels-writer');\nconst SheetCommentsWriter = require('./sheet-comments-writer');\nconst DataValidations = require('../../doc/data-validations');\n\nconst xmlBuffer = new StringBuf();\n\n// ============================================================================================\n// Xforms\nconst ListXform = require('../../xlsx/xform/list-xform');\nconst DataValidationsXform = require('../../xlsx/xform/sheet/data-validations-xform');\nconst SheetPropertiesXform = require('../../xlsx/xform/sheet/sheet-properties-xform');\nconst SheetFormatPropertiesXform = require('../../xlsx/xform/sheet/sheet-format-properties-xform');\nconst ColXform = require('../../xlsx/xform/sheet/col-xform');\nconst RowXform = require('../../xlsx/xform/sheet/row-xform');\nconst HyperlinkXform = require('../../xlsx/xform/sheet/hyperlink-xform');\nconst SheetViewXform = require('../../xlsx/xform/sheet/sheet-view-xform');\nconst SheetProtectionXform = require('../../xlsx/xform/sheet/sheet-protection-xform');\nconst PageMarginsXform = require('../../xlsx/xform/sheet/page-margins-xform');\nconst PageSetupXform = require('../../xlsx/xform/sheet/page-setup-xform');\nconst AutoFilterXform = require('../../xlsx/xform/sheet/auto-filter-xform');\nconst PictureXform = require('../../xlsx/xform/sheet/picture-xform');\n\n// since prepare and render are functional, we can use singletons\nconst xform = {\n  dataValidations: new DataValidationsXform(),\n  sheetProperties: new SheetPropertiesXform(),\n  sheetFormatProperties: new SheetFormatPropertiesXform(),\n  columns: new ListXform({tag: 'cols', length: false, childXform: new ColXform()}),\n  row: new RowXform(),\n  hyperlinks: new ListXform({tag: 'hyperlinks', length: false, childXform: new HyperlinkXform()}),\n  sheetViews: new ListXform({tag: 'sheetViews', length: false, childXform: new SheetViewXform()}),\n  sheetProtection: new SheetProtectionXform(),\n  pageMargins: new PageMarginsXform(),\n  pageSeteup: new PageSetupXform(),\n  autoFilter: new AutoFilterXform(),\n  picture: new PictureXform(),\n};\n\n// ============================================================================================\n\nclass WorksheetWriter {\n  constructor(options) {\n    // in a workbook, each sheet will have a number\n    this.id = options.id;\n\n    // and a name\n    this.name = options.name || `Sheet${this.id}`;\n\n    // add a state\n    this.state = options.state || 'visible';\n\n    // rows are stored here while they need to be worked on.\n    // when they are committed, they will be deleted.\n    this._rows = [];\n\n    // column definitions\n    this._columns = null;\n\n    // column keys (addRow convenience): key ==> this._columns index\n    this._keys = {};\n\n    // keep record of all merges\n    this._merges = [];\n    this._merges.add = function() {\n    }; // ignore cell instruction\n\n    // keep record of all hyperlinks\n    this._sheetRelsWriter = new SheetRelsWriter(options);\n\n    this._sheetCommentsWriter = new SheetCommentsWriter(this, this._sheetRelsWriter, options);\n\n\n    // keep a record of dimensions\n    this._dimensions = new Dimensions();\n\n    // first uncommitted row\n    this._rowZero = 1;\n\n    // committed flag\n    this.committed = false;\n\n    // for data validations\n    this.dataValidations = new DataValidations();\n\n    // for sharing formulae\n    this._formulae = {};\n    this._siFormulae = 0;\n\n    // for default row height, outline levels, etc\n    this.properties = Object.assign(\n      {},\n      {\n        defaultRowHeight: 15,\n        dyDescent: 55,\n        outlineLevelCol: 0,\n        outlineLevelRow: 0,\n      },\n      options.properties\n    );\n\n    // for all things printing\n    this.pageSetup = Object.assign(\n      {},\n      {\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\n        orientation: 'portrait',\n        horizontalDpi: 4294967295,\n        verticalDpi: 4294967295,\n        fitToPage: !!(options.pageSetup && ((options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) && !options.pageSetup.scale)),\n        pageOrder: 'downThenOver',\n        blackAndWhite: false,\n        draft: false,\n        cellComments: 'None',\n        errors: 'displayed',\n        scale: 100,\n        fitToWidth: 1,\n        fitToHeight: 1,\n        paperSize: undefined,\n        showRowColHeaders: false,\n        showGridLines: false,\n        horizontalCentered: false,\n        verticalCentered: false,\n        rowBreaks: null,\n        colBreaks: null,\n      },\n      options.pageSetup\n    );\n\n    // using shared strings creates a smaller xlsx file but may use more memory\n    this.useSharedStrings = options.useSharedStrings || false;\n\n    this._workbook = options.workbook;\n\n    this.hasComments = false;\n\n    // views\n    this._views = options.views || [];\n\n    // auto filter\n    this.autoFilter = options.autoFilter || null;\n\n    this._media = [];\n\n    // start writing to stream now\n    this._writeOpenWorksheet();\n\n    this.startedData = false;\n  }\n\n  get workbook() {\n    return this._workbook;\n  }\n\n  get stream() {\n    if (!this._stream) {\n      // eslint-disable-next-line no-underscore-dangle\n      this._stream = this._workbook._openStream(`/xl/worksheets/sheet${this.id}.xml`);\n\n      // pause stream to prevent 'data' events\n      this._stream.pause();\n    }\n    return this._stream;\n  }\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy() {\n    throw new Error('Invalid Operation: destroy');\n  }\n\n  commit() {\n    if (this.committed) {\n      return;\n    }\n    // commit all rows\n    this._rows.forEach(cRow => {\n      if (cRow) {\n        // write the row to the stream\n        this._writeRow(cRow);\n      }\n    });\n\n    // we _cannot_ accept new rows from now on\n    this._rows = null;\n\n\n    if (!this.startedData) {\n      this._writeOpenSheetData();\n    }\n    this._writeCloseSheetData();\n    this._writeAutoFilter();\n    this._writeMergeCells();\n\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // this._writeDimensions();\n\n    this._writeHyperlinks();\n    this._writeDataValidations();\n    this._writeSheetProtection();\n    this._writePageMargins();\n    this._writePageSetup();\n    this._writeBackground();\n\n    // Legacy Data tag for comments\n    this._writeLegacyData();\n\n    this._writeCloseWorksheet();\n    // signal end of stream to workbook\n    this.stream.end();\n\n    this._sheetCommentsWriter.commit();\n    // also commit the hyperlinks if any\n    this._sheetRelsWriter.commit();\n\n    this.committed = true;\n  }\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  }\n\n  get views() {\n    return this._views;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    // calculate max header row count\n    this._headerRowCount = value.reduce((pv, cv) => {\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    let count = 1;\n    const columns = (this._columns = []);\n    value.forEach(defn => {\n      const column = new Column(this, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  // =========================================================================\n  // Rows\n  get _nextRow() {\n    return this._rowZero + this._rows.length;\n  }\n\n  // iterate over every uncommitted row in the worksheet, including maybe empty rows\n  eachRow(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._nextRow;\n      for (let i = this._rowZero; i < n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(row => {\n        if (row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  }\n\n  _commitRow(cRow) {\n    // since rows must be written in order, we commit all rows up till and including cRow\n    let found = false;\n    while (this._rows.length && !found) {\n      const row = this._rows.shift();\n      this._rowZero++;\n      if (row) {\n        this._writeRow(row);\n        found = row.number === cRow.number;\n        this._rowZero = row.number + 1;\n      }\n    }\n  }\n\n  get lastRow() {\n    // returns last uncommitted row\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  }\n\n  // find a row (if exists) by row number\n  findRow(rowNumber) {\n    const index = rowNumber - this._rowZero;\n    return this._rows[index];\n  }\n\n  getRow(rowNumber) {\n    const index = rowNumber - this._rowZero;\n\n    // may fail if rows have been comitted\n    if (index < 0) {\n      throw new Error('Out of bounds: this row has been committed');\n    }\n    let row = this._rows[index];\n    if (!row) {\n      this._rows[index] = row = new Row(this, rowNumber);\n    }\n    return row;\n  }\n\n  addRow(value) {\n    const row = new Row(this, this._nextRow);\n    this._rows[row.number - this._rowZero] = row;\n    row.values = value;\n    return row;\n  }\n\n  // ================================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.findRow(address.row);\n    return row ? row.findCell(address.column) : undefined;\n  }\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.getRow(address.row);\n    return row.getCellEx(address);\n  }\n\n  mergeCells() {\n    // may fail if rows have been comitted\n    const dimensions = new Dimensions(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\n\n    // check cells aren't already merged\n    this._merges.forEach(merge => {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    const master = this.getCell(dimensions.top, dimensions.left);\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        if (i > dimensions.top || j > dimensions.left) {\n          this.getCell(i, j).merge(master);\n        }\n      }\n    }\n\n    // index merge\n    this._merges.push(dimensions);\n  }\n\n  // =========================================================================\n\n  addBackgroundImage(imageId) {\n    this._background = {\n      imageId,\n    };\n  }\n  \n\n  getBackgroundImageId() {\n    return this._background && this._background.imageId;\n  }\n  \n  // ================================================================================\n\n  _write(text) {\n    xmlBuffer.reset();\n    xmlBuffer.addText(text);\n    this.stream.write(xmlBuffer);\n  }\n\n  _writeSheetProperties(xmlBuf, properties, pageSetup) {\n    const sheetPropertiesModel = {\n      outlineProperties: properties && properties.outlineProperties,\n      tabColor: properties && properties.tabColor,\n      pageSetup:\n        pageSetup && pageSetup.fitToPage\n          ? {\n            fitToPage: pageSetup.fitToPage,\n          }\n          : undefined,\n    };\n\n    xmlBuf.addText(xform.sheetProperties.toXml(sheetPropertiesModel));\n  }\n\n  _writeSheetFormatProperties(xmlBuf, properties) {\n    const sheetFormatPropertiesModel = properties\n      ? {\n        defaultRowHeight: properties.defaultRowHeight,\n        dyDescent: properties.dyDescent,\n        outlineLevelCol: properties.outlineLevelCol,\n        outlineLevelRow: properties.outlineLevelRow,\n      }\n      : undefined;\n\n    xmlBuf.addText(xform.sheetFormatProperties.toXml(sheetFormatPropertiesModel));\n  }\n\n  _writeOpenWorksheet() {\n    xmlBuffer.reset();\n\n    xmlBuffer.addText('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>');\n    xmlBuffer.addText(\n      '<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"' +\n      ' xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"' +\n      ' xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"' +\n      ' mc:Ignorable=\"x14ac\"' +\n      ' xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">'\n    );\n\n    this._writeSheetProperties(xmlBuffer, this.properties, this.pageSetup);\n\n    xmlBuffer.addText(xform.sheetViews.toXml(this.views));\n\n    this._writeSheetFormatProperties(xmlBuffer, this.properties);\n\n    this.stream.write(xmlBuffer);\n  }\n\n  _writeColumns() {\n    const cols = Column.toModel(this.columns);\n    if (cols) {\n      xform.columns.prepare(cols, {styles: this._workbook.styles});\n      this.stream.write(xform.columns.toXml(cols));\n    }\n  }\n\n  _writeOpenSheetData() {\n    this._write('<sheetData>');\n  }\n\n  _writeRow(row) {\n    if (!this.startedData) {\n      this._writeColumns();\n      this._writeOpenSheetData();\n      this.startedData = true;\n    }\n\n    if (row.hasValues || row.height) {\n      const {model} = row;\n      const options = {\n        styles: this._workbook.styles,\n        sharedStrings: this.useSharedStrings ? this._workbook.sharedStrings : undefined,\n        hyperlinks: this._sheetRelsWriter.hyperlinksProxy,\n        merges: this._merges,\n        formulae: this._formulae,\n        siFormulae: this._siFormulae,\n        comments: [],\n      };\n      xform.row.prepare(model, options);\n      this.stream.write(xform.row.toXml(model));\n\n      if (options.comments.length) {\n        this.hasComments = true;\n        this._sheetCommentsWriter.addComments(options.comments);\n      }\n\n    }\n  }\n\n  _writeCloseSheetData() {\n    this._write('</sheetData>');\n  }\n\n  _writeMergeCells() {\n    if (this._merges.length) {\n      xmlBuffer.reset();\n      xmlBuffer.addText(`<mergeCells count=\"${this._merges.length}\">`);\n      this._merges.forEach(merge => {\n        xmlBuffer.addText(`<mergeCell ref=\"${merge}\"/>`);\n      });\n      xmlBuffer.addText('</mergeCells>');\n\n      this.stream.write(xmlBuffer);\n    }\n  }\n\n  _writeHyperlinks() {\n    // eslint-disable-next-line no-underscore-dangle\n    this.stream.write(xform.hyperlinks.toXml(this._sheetRelsWriter._hyperlinks));\n  }\n\n  _writeDataValidations() {\n    this.stream.write(xform.dataValidations.toXml(this.dataValidations.model));\n  }\n\n  _writeSheetProtection() {\n    this.stream.write(xform.sheetProtection.toXml(this.sheetProtection));\n  }\n\n  _writePageMargins() {\n    this.stream.write(xform.pageMargins.toXml(this.pageSetup.margins));\n  }\n\n  _writePageSetup() {\n    this.stream.write(xform.pageSeteup.toXml(this.pageSetup));\n  }\n\n  _writeAutoFilter() {\n    this.stream.write(xform.autoFilter.toXml(this.autoFilter));\n  }\n\n  _writeBackground() {\n    if (this._background) {\n      \n      if(this._background.imageId !== undefined){\n        const image = this._workbook.getImage(this._background.imageId);\n        const pictureId = this._sheetRelsWriter.addMedia({\n          Target: `../media/${image.name}`,\n          Type: RelType.Image,\n        });\n        \n        this._background = {\n          ...this._background,\n          rId: pictureId,\n        };\n      }\n      this.stream.write(xform.picture.toXml({rId: this._background.rId}));\n    }\n  }\n\n  _writeLegacyData() {\n    if (this.hasComments) {\n      xmlBuffer.reset();\n      xmlBuffer.addText(`<legacyDrawing r:id=\"${this._sheetCommentsWriter.vmlRelId}\"/>`);\n      this.stream.write(xmlBuffer);\n    }\n  }\n\n  _writeDimensions() {\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // and we don't know the dimensions until the commit, so don't write them.\n    // this._write('<dimension ref=\"' + this._dimensions + '\"/>');\n  }\n\n  _writeCloseWorksheet() {\n    this._write('</worksheet>');\n  }\n}\n\nmodule.exports = WorksheetWriter;\n"],"file":"worksheet-writer.js"}