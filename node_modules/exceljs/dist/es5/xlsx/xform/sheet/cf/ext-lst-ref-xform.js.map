{"version":3,"sources":["../../../../../../lib/xlsx/xform/sheet/cf/ext-lst-ref-xform.js"],"names":["BaseXform","require","X14IdXform","xmlStream","model","leafNode","tag","text","name","ExtXform","map","openNode","uri","render","x14Id","closeNode","node","parser","parseOpen","parseText","parseClose","undefined","ExtLstRefXform","ext","type","attributes","value","val","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;IAEMC,U;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKC,GAAxB,EAA6B,IAA7B,EAAmCF,KAAnC;AACD;;;gCAEW;AACV,WAAKA,KAAL,GAAa,EAAb;AACD;;;8BAESG,I,EAAM;AACd,WAAKH,KAAL,IAAcG,IAAd;AACD;;;+BAEUC,I,EAAM;AACf,aAAOA,IAAI,KAAK,KAAKF,GAArB;AACD;;;wBAlBS;AACR,aAAO,QAAP;AACD;;;;EAHsBN,S;;IAsBnBS,Q;;;;;AACJ,sBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACT,gBAAU,IAAIR,UAAJ;AADD,KAAX;AAHY;AAMb;;;;2BAMMC,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACQ,QAAV,CAAmB,KAAKL,GAAxB,EAA6B;AAC3BM,QAAAA,GAAG,EAAE,wCADsB;AAE3B,qBAAa;AAFc,OAA7B;AAKA,WAAKF,GAAL,CAAS,QAAT,EAAmBG,MAAnB,CAA0BT,KAAK,CAACU,KAAhC;AAEAX,MAAAA,SAAS,CAACY,SAAV;AACD;;;8BAESC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AAED,cAAQA,IAAI,CAACR,IAAb;AACE,aAAK,KAAKF,GAAV;AACE,eAAKF,KAAL,GAAa,EAAb;AACA,iBAAO,IAAP;;AAEF;AACE,eAAKa,MAAL,GAAc,KAAKP,GAAL,CAASM,IAAI,CAACR,IAAd,CAAd;;AACA,cAAI,KAAKS,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACD;;AACD,iBAAO,IAAP;AAVJ;AAYD;;;8BAEST,I,EAAM;AACd,UAAI,KAAKU,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYE,SAAZ,CAAsBZ,IAAtB;AACD;AACF;;;+BAEUC,I,EAAM;AACf,UAAI,KAAKS,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKA,MAAL,CAAYG,UAAZ,CAAuBZ,IAAvB,CAAL,EAAmC;AACjC,eAAKS,MAAL,GAAcI,SAAd;AACD;;AACD,eAAO,IAAP;AACD;;AAED,aAAOb,IAAI,KAAK,KAAKF,GAArB;AACD;;;wBAlDS;AACR,aAAO,KAAP;AACD;;;;EAXoBN,S;;IA8DjBsB,c;;;;;AACJ,4BAAc;AAAA;;AAAA;;AACZ;AACA,WAAKZ,GAAL,GAAW;AACTa,MAAAA,GAAG,EAAE,IAAId,QAAJ;AADI,KAAX;AAFY;AAKb;;;;2BAMMN,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACQ,QAAV,CAAmB,KAAKL,GAAxB;AACA,WAAKI,GAAL,CAASa,GAAT,CAAaV,MAAb,CAAoBV,SAApB,EAA+BC,KAA/B;AACAD,MAAAA,SAAS,CAACY,SAAV;AACD;;;8BAESC,I,EAAM;AACd,WAAKZ,KAAL,GAAa;AACXoB,QAAAA,IAAI,EAAER,IAAI,CAACS,UAAL,CAAgBD,IADX;AAEXE,QAAAA,KAAK,EAAEV,IAAI,CAACS,UAAL,CAAgBE;AAFZ,OAAb;AAID;;;+BAEUnB,I,EAAM;AACf,aAAOA,IAAI,KAAK,KAAKF,GAArB;AACD;;;wBAnBS;AACR,aAAO,QAAP;AACD;;;;EAV0BN,S;;AA8B7B4B,MAAM,CAACC,OAAP,GAAiBP,cAAjB","sourcesContent":["/* eslint-disable max-classes-per-file */\nconst BaseXform = require('../../base-xform');\n\nclass X14IdXform extends BaseXform {\n  get tag() {\n    return 'x14:id';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.leafNode(this.tag, null, model);\n  }\n\n  parseOpen() {\n    this.model = '';\n  }\n\n  parseText(text) {\n    this.model += text;\n  }\n\n  parseClose(name) {\n    return name !== this.tag;\n  }\n}\n\nclass ExtXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'x14:id': new X14IdXform(),\n    };\n  }\n\n  get tag() {\n    return 'ext';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      uri: '{B025F937-C7B1-47D3-B67F-A62EFF666E3E}',\n      'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\n    });\n\n    this.map['x14:id'].render(model.x14Id);\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.model = {};\n        return true;\n\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        return true;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n\n    return name !== this.tag;\n  }\n}\n\nclass ExtLstRefXform extends BaseXform {\n  constructor() {\n    super();\n    this.map = {\n      ext: new ExtXform(),\n    };\n  }\n\n  get tag() {\n    return 'extLst';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag);\n    this.map.ext.render(xmlStream, model);\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    this.model = {\n      type: node.attributes.type,\n      value: node.attributes.val,\n    };\n  }\n\n  parseClose(name) {\n    return name !== this.tag;\n  }\n}\n\nmodule.exports = ExtLstRefXform;\n"],"file":"ext-lst-ref-xform.js"}