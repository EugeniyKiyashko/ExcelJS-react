{"version":3,"sources":["../../../../../../lib/xlsx/xform/sheet/cf/icon-set-xform.js"],"names":["BaseXform","require","CfvoXform","IconSetXform","map","cfvo","cfvoXform","xmlStream","model","openNode","tag","iconSet","toStringAttribute","reverse","toBoolAttribute","showValue","forEach","render","closeNode","node","parser","parseOpen","name","toStringValue","attributes","toBoolValue","text","parseText","parseClose","push","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,cAAD,CAAzB;;IAEME,Y;;;;;AACJ,0BAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACTC,MAAAA,IAAI,EAAE,MAAKC,SAAL,GAAiB,IAAIJ,SAAJ;AADd,KAAX;AAHY;AAMb;;;;2BAMMK,S,EAAWC,K,EAAO;AAAA;;AACvBD,MAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKC,GAAxB,EAA6B;AAC3BC,QAAAA,OAAO,EAAEX,SAAS,CAACY,iBAAV,CAA4BJ,KAAK,CAACG,OAAlC,EAA2C,gBAA3C,CADkB;AAE3BE,QAAAA,OAAO,EAAEb,SAAS,CAACc,eAAV,CAA0BN,KAAK,CAACK,OAAhC,EAAyC,KAAzC,CAFkB;AAG3BE,QAAAA,SAAS,EAAEf,SAAS,CAACc,eAAV,CAA0BN,KAAK,CAACO,SAAhC,EAA2C,IAA3C;AAHgB,OAA7B;AAMAP,MAAAA,KAAK,CAACH,IAAN,CAAWW,OAAX,CAAmB,UAAAX,IAAI,EAAI;AACzB,QAAA,MAAI,CAACC,SAAL,CAAeW,MAAf,CAAsBV,SAAtB,EAAiCF,IAAjC;AACD,OAFD;AAIAE,MAAAA,SAAS,CAACW,SAAV;AACD;;;8BAESC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AAED,cAAQA,IAAI,CAACG,IAAb;AACE,aAAK,KAAKZ,GAAV;AACE,eAAKF,KAAL,GAAa;AACXG,YAAAA,OAAO,EAAEX,SAAS,CAACuB,aAAV,CAAwBJ,IAAI,CAACK,UAAL,CAAgBb,OAAxC,EAAiD,gBAAjD,CADE;AAEXE,YAAAA,OAAO,EAAEb,SAAS,CAACyB,WAAV,CAAsBN,IAAI,CAACK,UAAL,CAAgBX,OAAtC,CAFE;AAGXE,YAAAA,SAAS,EAAEf,SAAS,CAACyB,WAAV,CAAsBN,IAAI,CAACK,UAAL,CAAgBT,SAAtC,CAHA;AAIXV,YAAAA,IAAI,EAAE;AAJK,WAAb;AAMA;;AAEF;AACE,eAAKe,MAAL,GAAc,KAAKhB,GAAL,CAASe,IAAI,CAACG,IAAd,CAAd;;AACA,cAAI,KAAKF,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,mBAAO,IAAP;AACD;;AAfL;;AAiBA,aAAO,KAAP;AACD;;;8BAESO,I,EAAM;AACd,UAAI,KAAKN,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYO,SAAZ,CAAsBD,IAAtB;AACD;AACF;;;+BAEUJ,I,EAAM;AACf,UAAI,KAAKF,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKA,MAAL,CAAYQ,UAAZ,CAAuBN,IAAvB,CAAL,EAAmC;AACjC,eAAKd,KAAL,CAAWc,IAAX,EAAiBO,IAAjB,CAAsB,KAAKT,MAAL,CAAYZ,KAAlC;AACA,eAAKY,MAAL,GAAc,IAAd;AACD;;AACD,eAAO,IAAP;AACD;;AACD,aAAOE,IAAI,KAAK,KAAKZ,GAArB;AACD;;;wBA3DS;AACR,aAAO,SAAP;AACD;;;;EAXwBV,S;;AAuE3B8B,MAAM,CAACC,OAAP,GAAiB5B,YAAjB","sourcesContent":["const BaseXform = require('../../base-xform');\n\nconst CfvoXform = require('./cfvo-xform');\n\nclass IconSetXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      cfvo: this.cfvoXform = new CfvoXform(),\n    };\n  }\n\n  get tag() {\n    return 'iconSet';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      iconSet: BaseXform.toStringAttribute(model.iconSet, '3TrafficLights'),\n      reverse: BaseXform.toBoolAttribute(model.reverse, false),\n      showValue: BaseXform.toBoolAttribute(model.showValue, true),\n    });\n\n    model.cfvo.forEach(cfvo => {\n      this.cfvoXform.render(xmlStream, cfvo);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          iconSet: BaseXform.toStringValue(node.attributes.iconSet, '3TrafficLights'),\n          reverse: BaseXform.toBoolValue(node.attributes.reverse),\n          showValue: BaseXform.toBoolValue(node.attributes.showValue),\n          cfvo: [],\n        };\n        break;\n\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n    }\n    return false;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model[name].push(this.parser.model);\n        this.parser = null;\n      }\n      return true;\n    }\n    return name !== this.tag;\n  }\n}\n\nmodule.exports = IconSetXform;\n"],"file":"icon-set-xform.js"}